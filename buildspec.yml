version: 0.2

env:
  variables:
    DB_URL: $DB_URL

phases:
  install:
    runtime-versions:
      java: corretto17  # Use Java 17 runtime
    commands:
      - echo "Installing Gradle" # Install Gradle
      - curl -sL https://services.gradle.org/distributions/gradle-8.4-bin.zip -o gradle.zip
      - unzip -q gradle.zip
      - export PATH=$PATH:$PWD/gradle-8.4/bin

      - echo "Installing MySQL" # Install MySQL client
      - apt-get update
      - apt-get install -y mysql-client
    pre_build:
      commands:
        - aws --version

  build:
    commands:
      - echo $DB_URL
      - echo $DB_USERNAME
      - echo $DB_PASSWORD
      - echo $DB_DRIVER
      - echo $REPOSITORY_URI

      - echo "Executing build commands"

      - echo Connect to the database and perform database operations
      - mysql -u $DB_USERNAME -p$DB_PASSWORD -h $DB_URL -D etta-prod

      - chmod +x ./gradlew  # Add this line to grant executable permissions
      - ./gradlew clean build

      - echo log in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI

      - echo Building Docker image...
      - docker build -t $REPOSITORY_URI:latest .

      - echo Tagging Docker image...
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $REPOSITORY_URI:latest

artifacts:
  files:
    - build/libs/edtech-0.0.1-SNAPSHOT.jar  # Adjust the path according to your Gradle build output
