version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17  # Use Java 17 runtime
    commands:
      - echo "Installing Gradle"
      - curl -sL https://services.gradle.org/distributions/gradle-8.4-bin.zip -o gradle.zip
      - unzip -q gradle.zip
      - export PATH=$PATH:$PWD/gradle-8.4/bin
    pre_build:
      commands:
        - echo log in to Amazon ECR...
        - aws --version
        - echo $AWS_DEFAULT_REGION
        - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
        - REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/etta-ecr-docker
        - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
        - IMAGE_TAG=${COMMIT_HASH:=latest}
        #- aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo $ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/etta-ecr-docker
      - echo "Executing build commands"
      - chmod +x ./gradlew  # Add this line to grant executable permissions
      - ./gradlew clean build
      - echo Building Docker image...
      - docker build -t $ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/etta-ecr-docker:latest .
      - echo Tagging Docker image...
      - docker tag $REPOSITORY_URI:latest $ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/etta-ecr-docker:$IMAGE_TAG
      #- echo Pushing Docker image to Amazon ECR...
      #- aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin public.ecr.aws/x7m8g5i3
      #- docker push public.ecr.aws/x7m8g5i3/etta-ecr-docker:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/etta-ecr-docker:latest
      - docker push $ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/etta-ecr-docker:$IMAGE_TAG
      - echo write definitions file...
      - printf '[{"name":"exp-code-pipeline","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files:
    - build/libs/edtech-0.0.1-SNAPSHOT.jar  # Adjust the path according to your Gradle build output
